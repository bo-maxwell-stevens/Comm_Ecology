respXY=read.csv(file=Pema.csv)
Pema <- read.csv("Y:/CReedH/Pema.csv")
View(Pema)
plot(respXY[,1:2])
respXY=read.csv(file=Pema.csv)
View(Pema)
respXY=read.csv(file="Y:/CReedH/Pema.csv")
plot(respXY[,1:2])
plot(respXY[,1:2])
plot(respXY[,1:2])
plot(respXY[,2],respXY[,1])
library(raster)
Hanta <- read.csv("Y:/CReedH/Occurrence_Data/Presence/Hanta.csv")
View(Hanta)
Pema <- read.csv("Y:/CReedH/Occurrence_Data/Presence/Pema.csv")
View(Pema)
setwd("~/")
library("raster", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
library("rgdal", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
library("sp", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
install.packages(c("raster", "rgdal", "sp"))
library("raster", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
library("rgdal", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
library("sp", lib.loc="\\cefnsshares/Homes/NAU-STUDENTS/crh244/Documents/R/win-library/3.0")
libary(raster)
library(raster)
library(sp)
stewd("Y:/CReedH/Occurance_Data/Presence")
setwd("Y:/CReedH/Occurance_Data/Presence")
libaray(stats)
library(stats)
pnorm(180, mean=165, sd=20)
qnorm(.99, mean=165, sd=20)
dnorm(170, mean =165, sd =20)
rnorm(10, mean= 165, sd=20)
pt(2.5,df=37)
qt(.9,df=10)
dt(1.5,df=10)
rt(12, df=15)
x <- seq(-4, 4, by = 0.1)
y <- dnorm(x, mean = 0, sd = 1)
plot(x, y, ylim = c(0, 0.6), type = "l")
lines(x, dt(x, df =3), lty = 2)
legend (-2.5, 0.6, c('Standard normal', 't distribution df = 3'), lty = 1:2, lwd = 0.5)
title('Density curves of standard normal and t distributions')
par(mar = c(6, 5, 6, 3) + 0.1)
x <- seq(-4, 4, by = 0.1)
y <- dnorm(x, mean = 0, sd = 1)
par(mar = c(6, 5, 6, 3) + 0.1)
plot(x, y, ylim = c(0, 0.6), type = "l")
lines(x, dt(x, df =3), lty = 2)
legend (-2.5, 0.6, c('Standard normal', 't distribution df = 3'), lty = 1:2, lwd = 0.5)
title('Density curves of standard normal and t distributions')
x <- seq(0, 15, by = 0.1)
y <- dchisq(x, df = 5)
par(mar = c(8, 5, 7, 3) + 0.1)
plot(x, y, ylim = c(0, 0.7), type = 'l')
lines(x, df(x, 5, 0), lty = 2)
legend (5, 0.6, c("Chi-squared distribution df = 5", 'F distribution df1 = 5, df2 = 10'), lty = 1:2, lwd = 0.5)
title('Density curves of chi-squared and F distributions')
PCB <- c( 2.9, 7.6, 4.8, 5.2, 5.1, 4.7, 6.9, 4.9, 3.7, 3.8)
mean(PCB)
meadian(PCB)
median(PCB)
sd(PCB)
summary(PCB)
hist(PCB)
his(PCB, breaks=sqrt(length(PCB)), col='gray')
hist(PCB, breaks=sqrt(length(PCB)), col='gray')
qqnorm(PCB, main='The Q-Q plot for PCB')
abline(mean(PCB), sd(PCB))
boxplot(PCB, range=0)
title('the boxplot for PCB')
boxplot(PCB)
boxplot(PCB, col='blue', horizontal=TRUE)
boxplot(PCB, col='yellow', horizontal=TRUE)
N=length(PCB)
Xbar= mean(PCB)
S=1.4
A=0.05
z=gnorm(1-A/2)
z=qnorm(1-A/2)
L=Xbar-Z*S/sqrt(n)
L=Xbar-z*S/sqrt(n)
L=Xbar-z*S/sqrt(N)
n=length(PCB)
L=Xbar-z*S/sqrt(n)
U=Xbar+z*S/sqrt(n)
cat(paste('A 95% confidence interval for Mu is (",L,",",U,")'))
title('the boxplot for PCB')
boxplot(PCB, col='yellow', horizontal=TRUE
log(6.2)
lo(6.2, base=10)
log(6.2, base=10)
sqrt2<- sqrt(2)
sqrt2
a<- (2,4,6)
a <-(2,4,6)
a <-c(2,4,6)
b <-c(8,10,12)
c <- a+b
c
d <-c(14,20)
a+d
a+5
a[-2]
pairs(trees)
pairs(Volume~Girth+Height, trees)
summary(trees)
apply(trees, MARGIN=2, FUN=sd)
apply(trees, 2, function(...)
quantile(..., probs=c(.05,.95)))
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
setwd("Y:/LOCKED/R_code/week07")
commDat=read.csv("Y:/LOCKED/grassland_data/community_comp.csv",row.names=1)
commDat[commDat>0]=1#converting it to a binary presence/absence dataset
```{r}
library(vegan)
Cscore.obs=nestedchecker(commDat)
Cscore.obs
49*48
Cscore.mod=oecosimu(commDat,nestedchecker,method="swap",nsimul=1000)#"swap" is equivalent to Gotelli's SIM9
Cscore.mod
Cscore.mod=oecosimu(commDat,nestedchecker,method="swap",nsimul=1000)#"swap" is equivalent to Gotelli's SIM9
Cscore.obs
Cscore.mod=oecosimu(commDat,nestedchecker,method="swap",nsimul=1000)#"swap" is equivalent to Gotelli's SIM9
Cscore.mod
hist(Cscore.mod$oecosimu$simulated)
lines(c(Cscore.obs$statistic,Cscore.obs$statistic),c(-10,100),col="blue")
Vratio=function(x){
return(var(rowSums(x))/sum(apply(x,2,sd)))#read as "variance (var) in species richness across plots (rowSums(x)), divided by the sum (sum) of the variances in species occurrence frequencies (apply(x,2,sd))"
}
Vratio.mod=oecosimu(commDat,Vratio,method="r0",nsimul=1000)#r1=SIM2 in Gotelli(2000)
Vratio.mod
hist(Vratio.mod$oecosimu$simulated,xlim=c(0.555,0.75))
lines(c(Vratio.mod$statistic,Vratio.mod$statistic),c(-10,100),col="blue")
Csc
Cscore.mod4=oecosimu(commDat,nestedchecker,method="r0",nsimul=1000)
Cscore.mod4
hist(Cscore.mod4$oecosimu$simulated,xlim=c(37200,90500))
