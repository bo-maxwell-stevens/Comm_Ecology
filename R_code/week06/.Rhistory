commDat=read.csv("Y:/LOCKED/arthropod_data/commComp_2000.csv",na.strings=c("","NA"))
comm=commDat[,-c(1:6)]#creating a dataset without all the species ID info, for the sake of convenience later
rownames(comm)=commDat[,1]
library(vegan)
View(comm)
View(commDat)
View(comm)
comm.dca=decorana(t(comm))
comm.dca
plot(comm.dca)
plot(comm.dca,display="sites")
plot(comm.dca,display="species")
dcaSites=scores(comm.dca)
dcaSpp=scores(comm.dca,display="species")
View(dcaSpp)
View(dcaSites)
plot(dcaSites[,1],dcaSites[,2],col=rep(c("Red","Orange","Blue","Green"),each=10),xlab="DCA1",ylab="DCA2")
View(dcaSites)
library(ecodist)#this libary has a function for calculating Bray-Curtis distance
install.packages("ecodist")
library(ecodist)#this libary has a function for calculating Bray-Curtis distance
bcDist=bcdist(t(comm))
comm.nms=nmds(bcDist,mindim=1,maxdim=2)#NMDS utilizes a random seed to initiate calculation of orthogonal axes.  Because of this, the default is to run the analysis many times, then select the run with the lowest "stress" (disagreement between the raw and ordinated data).
comm.nms.min=nmds.min(comm.nms)#this function finds the run with the minimum stress
plot(comm.nms.min[,1],comm.nms.min[,2],col=rep(c("Red","Orange","Blue","Green"),each=10),xlab="NMS1",ylab="NMS2")
View(commDat)
plot(hclust(bcDist,method="average"),labels=colnames(comm))
