dir("R:/LOCKED/arthropod_data")#see what the file names look like
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
setwd("R:/LOCKED/arthropod_data")
dir("R:/LOCKED/arthropod_data")#see what the file names look like
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
yrLngth=lapply(commList,nrow)#getting the number of rows for each dataframe associated with a given year
rep(2000,yrLngth[1])
#check out the following section of the line above to understand how we wrote this column
i=0
paste(i,"csv",sep="."),sep="")
paste(i,"csv",sep="."),sep="")
paste(i,"csv",sep="."),sep=".")
paste(i,"csv",sep=".")
paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep="")
commList[1]
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
commList[4]
commList[2]
commList[1]
dir("R:/LOCKED/arthropod_data")#see what the file names look like
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
yrLngth=lapply(commList,nrow)#getting the number of rows for each dataframe associated with a given year
commDat=rbind(commList[[1]],commList[[2]],commList[[3]],commList[[4]])#row binding each year into a single dataframe; note that rbind will only work if all dataframes have the same column names
#check out the following section of the line above to understand how we wrote this column
rep(2000,yrLngth[1])
colnames(commDat)[1:2]=c("Year","ID")#name the first two columns of the dataset (currently nameless)
head(commDat)
commDat00=commDat[commDat$Year==2000,]
install.packages("bipartite")
?bipartite #see what this package is all about
??bipartite #see what this package is all about
predators=match(commDat00$Order,c("Araneae","Opiliones"))#identifying the rows of spiders and daddy longlegs
predDat=commDat00[!is.na(predators),]#making all spiders "predator"; this is probably inaccurate, as tiny jumping spiders aren't eating e.g. huge katydids, but we'll deal with "trait matching" later
preyDat=commDat00[is.na(predators),]#notice the difference from the previous line?
plot(colSums(preyDat[,8:47]),colSums(predDat[,8:47]),xlab="Prey Abundance",ylab="Predator Abundance")#looks like predators tend to increase with prey, looks good!
library(bipartite)
predators=match(commDat00$Order,c("Araneae","Opiliones"))#identifying the rows of spiders and daddy longlegs
predDat=commDat00[!is.na(predators),]#making all spiders "predator"; this is probably inaccurate, as tiny jumping spiders aren't eating e.g. huge katydids, but we'll deal with "trait matching" later
preyDat=commDat00[is.na(predators),]#notice the difference from the previous line?
plot(colSums(preyDat[,8:47]),colSums(predDat[,8:47]),xlab="Prey Abundance",ylab="Predator Abundance")#looks like predators tend to increase with prey, looks good!
dim(preyDat)
commDat=cbind(c(rep(2000,yrLngth[1]),rep(2001,yrLngth[2]),rep(2002,yrLngth[3]),rep(2003,yrLngth[4])),commDat)#adding a column with year of data collection
commList=list()#creating a list object with no data yet
for (i in 0:3){#starting a for loop
commList[[i+1]]=read.csv(paste("R:/LOCKED/arthropod_data/commComp_200",paste(i,"csv",sep="."),sep=""),na.strings=c("","NA"))#the paste function allows you to create strings (e.g. words) by combining other strings
#the preceding line reads "commList array 1 is the dataset from year 2000"
}
yrLngth=lapply(commList,nrow)#getting the number of rows for each dataframe associated with a given year
commDat=rbind(commList[[1]],commList[[2]],commList[[3]],commList[[4]])#row binding each year into a single dataframe; note that rbind will only work if all dataframes have the same column names
commDat=cbind(c(rep(2000,yrLngth[1]),rep(2001,yrLngth[2]),rep(2002,yrLngth[3]),rep(2003,yrLngth[4])),commDat)#adding a column with year of data collection
#check out the following section of the line above to understand how we wrote this column
rep(2000,yrLngth[1])
colnames(commDat)[1:2]=c("Year","ID")#name the first two columns of the dataset (currently nameless)
head(commDat)
commDat00=commDat[commDat$Year==2000,]
??bipartite #see what this package is all about
library(bipartite)
predators=match(commDat00$Order,c("Araneae","Opiliones"))#identifying the rows of spiders and daddy longlegs
predDat=commDat00[!is.na(predators),]#making all spiders "predator"; this is probably inaccurate, as tiny jumping spiders aren't eating e.g. huge katydids, but we'll deal with "trait matching" later
preyDat=commDat00[is.na(predators),]#notice the difference from the previous line?
plot(colSums(preyDat[,8:47]),colSums(predDat[,8:47]),xlab="Prey Abundance",ylab="Predator Abundance")#looks like predators tend to increase with prey, looks good!
webDat=as.matrix(preyDat[,8:47])%*%t(as.matrix(predDat[,8:47]))#this is matrix multiplication: the resulting dimensions will be equal to the number of rows of the first matrix (prey species) and the number of columns of the second matrix (transpose of the predators matrix, i.e. number of predator species)
colnames(webDat)=predDat$ID
rownames(webDat)=preyDat$ID
library(bipartite)
plotweb(webDat)
visweb(t(webDat))
networklevel(webDat,index=c("connectance","nestedness","H2"))
??networklevel
plotweb(webDat)
